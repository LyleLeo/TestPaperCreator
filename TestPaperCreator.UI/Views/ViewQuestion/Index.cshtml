
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>试题管理</h1>
<style>
    td, th {
        color: black;
    }

        td.details-control {
            background: url('../../images/details_open.png') no-repeat center center;
            cursor: pointer;
        }

    tr.shown td.details-control {
        background: url('../../images/details_close.png') no-repeat center center;
    }

    iframe {
        width: inherit;
    }
    .break{
        word-wrap:break-word
    }
</style>
<div class="panel panel-primary">
    <div class="panel-heading">试题管理</div>
    <div class="panel-body" style="color:black">
        <table id="table_local" class="table table-bordered table-striped table-hover">
            <thead>
                <tr>
                    <th></th>
                    <th hidden="hidden">ID</th>
                    <th>科目</th>
                    <th hidden="hidden">科目ID</th>
                    <th>章节</th>
                    <th hidden="hidden">章节ID</th>
                    <th>题型</th>
                    <th hidden="hidden">题型ID</th>
                    <th>难度</th>
                    <th hidden="hidden">题型ID</th>
                    <th hidden="hidden">内容</th>
                    <th>操作</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<div hidden="hidden" id="uploader" class="wu-example">
    <div id="thelist" class="uploader-list"></div>
    <div class="btns">
        <div id="picker">选择文件</div>
        <button id="ctlBtn" class="btn btn-default">开始上传</button>

    </div>
</div> 
<script type="text/javascript">
    $(document).ready(function () {
        var table = $("#table_local").DataTable({
            ajax: {
                "url": "/api/ViewQuestionAPI/GetQuestionList/",
                "type": "GET",
                //"dataType": "application/json",
                "data": {},
            },
            "columns": [
            {
                "className": "details-control",
                "orderable": false,
                "data": null,
                "defaultContent": '',
                "width": "5%",
                "name":"namee"
            },
            {
                "data": "ID",
                "className": "hidden",
            },
            { "data": "CourseName", "width": "19%" },
            { "className": "hidden", "data": "Course" },
            { "data": "SectionName", "width": "19%" },
            { "className": "hidden", "data": "Section" },
            {
                "data": "TypeName",
                "width": "19%"
            },
            { "className": "hidden", "data": "Type" },
            { "data": "DifficultyName", "width": "19%" },
            { "className": "hidden", "data": "Difficulty" },
            {
                "className": "hidden",
                "data": "Content"
            },
            {
                "width": "19%",
                "defaultContent": '<button class="btn btn-success" type="button" onclick="download(this,0)"><span class="glyphicon glyphicon-download-alt"></span></button><button class="btn btn-success" type="button" onclick="download(this,1)"><span class="glyphicon glyphicon-save"></span></button><button class="btn btn-warning" type="button" onclick="Del(this)"><span class="glyphicon glyphicon-trash"></span></button><button onclick="edit(this)" class="btn btn-warning" type="button" ><span class="glyphicon glyphicon-edit"></span></button>'
            },
            ],
            "order": [[1, 'asc']],
            bAutoWidth: false   ,                   //是否启用自动适应列宽
            paging: true,//分页
            pagingType: "full_numbers",//分页样式的类型
            //"order": [[ 1, 'asc' ]],
            ordering: true,//是否启用排序
            searching: true,//搜索
            language: {
                lengthMenu: '<select class="form-control input-md">' + '<option value="1">1</option>' + '<option value="10">10</option>' + '<option value="20">20</option>' + '<option value="30">30</option>' + '<option value="40">40</option>' + '<option value="50">50</option>' + '</select>条记录',//左上角的分页大小显示。
                search: '<span style="color:black">搜索：</span>',//右上角的搜索文本，可以写html标签
                paginate: {//分页的样式内容。
                    previous: "上一页",
                    next: "下一页",
                    first: "第一页",
                    last: "最后"
                },
                zeroRecords: "没有内容",//table tbody内容为空时，tbody的内容。
                //下面三者构成了总体的左下角的内容。
                info: "总共_PAGES_ 页，显示第_START_ 到第 _END_ ，筛选之后得到 _TOTAL_ 条，初始_MAX_ 条 ",//左下角的信息显示，大写的词为关键字。
                infoEmpty: "0条记录",//筛选为空时左下角的显示。
                infoFiltered: ""//筛选之后的左下角筛选提示，
            },
        });
        $('#table_local tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                row.child(format(row.data())).show();
                tr.addClass('shown');
            }
        });
        $("#table_local_filter input[type=search]").css({ width: "auto" });//右上角的默认搜索文本框，不写这个就超出去了。
    });
    function format(d) {
        var width = $("#table_local").innerWidth()
        var iframewidth = parseInt(width) / 2 - 16;//padding有8*2的宽度
        var str = getAttarchmentPath(d) + '/files/';
        var iframepageid = "iframepage" + d.ID.toString()
        var res = verifyurl(str + d.ID.toString() + '.html')
        if (verifyurl(str + d.ID.toString() + '.html') == 'error') {
            result = '没有文件'
        }
        else {
            var result = '<tr><th style="width:' + iframewidth + 'px" >题干</th><th style="width:' + iframewidth + 'px" >答案</th></tr><tr><td style="width:' + iframewidth + 'px"><iframe id="' + iframepageid + '" frameborder="1" scrolling="no" marginheight="0" width="' + iframewidth + '" height="200" marginwidth="0" src="' + str + d.ID.toString() + '.html"></iframe></td>' +
            '<td style="width:' + iframewidth + 'px"><iframe id="' + iframepageid + '_answer" frameborder="1" scrolling="no" marginheight="0" height="200" width = "' + iframewidth + '" marginwidth="0" src="' + str + d.ID.toString() + '_answer.html?new=' + Math.random() + '"></iframe></td></tr>';
        }

        return result
    }
    function download(obj,isanswer) {
        var curWwwPath = window.document.location.href;    //获取当前url
        var pathName = window.document.location.pathname;
        var pos = curWwwPath.indexOf(pathName);
        var localhostPath = curWwwPath.substring(0, pos) + "/";   //项目根路径
        var id = $(obj).parent().parent().children("td").eq(1).text()
        var course = $(obj).parent().parent().children("td").eq(3).text()
        var section = $(obj).parent().parent().children("td").eq(5).text()
        var type = $(obj).parent().parent().children("td").eq(7).text()
        var difficulty = $(obj).parent().parent().children("td").eq(9).text()
        if (isanswer == 0) {
            localhostPath += "Upload/" + course + "/" + section + "/" + type + "/" + difficulty + "/" + id + ".docx"
        }
        else {
            localhostPath += "Upload/" + course + "/" + section + "/" + type + "/" + difficulty + "/" + id + "_answer.docx"
        }
        window.location.href=localhostPath
    }
    function Del(obj) {
        var id = parseInt($(obj).parent().parent().children("td").eq(1).text())
        $.ajax({
            url: "/api/ViewQuestionAPI/DeleteQuestion/",
            type: "POST",
            contentType: 'application/json',
            data: JSON.stringify({ questionid: id }),
            beforeSend: function () {

            },
            success: function (result) {
                if (result == true) {
                    alert("删除成功")
                    window.location.reload()
                }
                else {
                    alert("删除失败")
                    return
                }
            }
        })
    }
    function getAttarchmentPath(d) {
        var curWwwPath = window.document.location.href;
        var pathName = window.document.location.pathname;
        var pos = curWwwPath.indexOf(pathName);
        var localhostPaht = curWwwPath.substring(0, pos);
        var str = localhostPaht + '/Upload' + '/' + d.Course.toString() + '/' + d.Section.toString() + '/' + d.Type.toString() + '/' + d.Difficulty.toString()
        return str
    }
    function verifyurl(url) {
        var res = ""
        $.ajax({
            type: "GET",
            cache: false,
            url: url,
            data: "",
            error: function (XMLHttpRequest, textStatus) {
                if (XMLHttpRequest.status == 404) {
                    res = "not found"
                }
                else {
                    res = "found"
                }
            }
        });
        return res
    }
    jQuery(function () {
        var $ = jQuery,
            $list = $('#thelist'),
            $btn = $('#ctlBtn'),
            state = 'pending',
            uploader;

        uploader = WebUploader.create({
            //是否自动上传
            auto: true,
            // 不压缩image
            resize: false,
            multiple: false,
            threads: 1,
            // swf文件路径
            swf: 'Content/webuploader/Uploader.swf',

            // 文件接收服务端。
            server: '/ViewQuestion/UpLoadProcess',
            timeout: 0,

            // 选择文件的按钮。可选。
            // 内部根据当前运行是创建，可能是input元素，也可能是flash.
            pick: '#picker',
            //验证上传文件的类型
            accept: {
                title: 'Documents',
                extensions: 'doc,docx,,'
            }
        });
        uploader.on("error", function (type) {
            if (type == "Q_TYPE_DENIED") {
                alert("ERROR")
            }
        });
        // 当有文件添加进来的时候
        uploader.on('fileQueued', function (file) {
            alert("正在上传文件，请稍后")
            $list.append('<div id="' + file.id + '" class="item">' +
                '<h4 class="info">' + file.name + '<span class="glyphicon glyphicon-remove" ></span></h4>' +
                //'<span class="glyphicon glyphicon-remove"></span>' +
                '<p class="state">等待上传...</p>' +
            '</div>');
            var questionid = $("#edit").children("td").eq(1).text()
            var course = $("#edit").children("td").eq(3).text()
            var questiontype = $("#edit").children("td").eq(5).text()
            var section = $("#edit").children("td").eq(7).text()
            var difficulty = $("#edit").children("td").eq(9).text()
            uploader.options.formData = { "questionid": questionid, "course": course, "questiontype": questiontype, "section": section, "difficulty": difficulty };
        });
        // 文件上传过程中创建进度条实时显示。
        uploader.on('uploadProgress', function (file, percentage) {
            var $li = $('#' + file.id),
                $percent = $li.find('.progress .progress-bar');

            // 避免重复创建
            if (!$percent.length) {
                $percent = $('<div class="progress progress-striped active">' +
                  '<div class="progress-bar" role="progressbar" style="width: 0%">' +
                  '</div>' +
                '</div>').appendTo($li).find('.progress-bar');
            }

            $li.find('p.state').text('上传中');

            $percent.css('width', percentage * 100 + '%');
        });

        uploader.on('uploadSuccess', function (file) {
            $('#' + file.id).find('p.state').text('已上传');
            alert("修改成功")
        });

        uploader.on('uploadError', function (file, reason) {
            $('#' + file.id).find('p.state').text('上传出错' + reason);
            alert("修改失败")
        });
        uploader.on('uploadComplete', function (file) {
            window.location.reload()
        });

        uploader.on('all', function (type) {
            if (type === 'startUpload') {
                state = 'uploading';
            } else if (type === 'stopUpload') {
                state = 'paused';
            } else if (type === 'uploadFinished') {
                state = 'done';
            }

            if (state === 'uploading') {
                $btn.text('暂停上传');
            } else {
                $btn.text('开始上传');
            }
        });

        $btn.on('click', function (file) {
            var course = $("#course").val();
            var questiontype = $("#questiontype").val();
            var section = $("#section").val();
            var difficulty = $("#difficulty").val();
            if (course == 0 || questiontype == 0 || section == 0 || difficulty == 0) {
                alert("请选择课程，题型，章节，难度");
                return;
            }
            uploader.options.formData = { "course": course, "questiontype": questiontype, "section": section, "difficulty": difficulty };
            if (state === 'uploading') {
                uploader.stop();
            } else {
                uploader.upload();
            }
        });
    });
    function edit(obj) {
        $(obj).parent().parent().attr("id","edit")
        $("#picker").find("input").click()
    }
</script>